# Transform
le<-gather(le,key="Year",value="LE",X1960:X2020)
# Streamline
le$Year<-gsub("X","",le$Year)%>%as.numeric(as.character(le$Year))
# Checking for missing values
le<-subset(le,Year<=2019&Year>=2000)
le%>%group_by(Country.Name)%>%miss_var_summary()%>%filter(n_miss>0)
View(le)
le<-read.csv("../Resources/Raw/Life_expectancy.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE, skip = 4)
# Remove unwanted fields
le<-select(le,-c(Indicator.Name,Indicator.Code,X))
# Transform
le<-gather(le,key="Year",value="LE",X1960:X2020)
# Streamline
le$Year<-gsub("X","",le$Year)%>%as.numeric(as.character(le$Year))
# Checking for missing values
le<-subset(le,Year<=2019&Year>=2000)
le%>%group_by(Country.Name)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing values
le<-le%>%group_by(Country.Name)%>%filter(!mean(is.na(LE)) >= 0.2)
le%>%group_by(Country.Name)%>%miss_var_summary()%>%filter(n_miss>0)
# Filling in missing values
le<-le%>%group_by(Country.Name)%>%mutate(LE = imputeTS::na_interpolation(LE))
# Final cleanup
le%>%group_by(Country.Name)%>%miss_var_summary()%>%filter(n_miss>0)
names(le)<-c("Country","Code","Year","LE_Code")
Alcohol_consumption<-read_excel("../Resources/Raw/Alcohol_consumption.xlsx",skip=2)
# Remove unwanted fields
Alcohol_consumption<-subset(Alcohol_consumption,Dim1=="All types")
Alcohol_consumption<-select(Alcohol_consumption,c(SpatialDimValueCode,Location,Period,FactValueNumeric))
# Converting year to proper format
Alcohol_consumption$Period<-as.numeric(as.character(Alcohol_consumption$Period))
View(Alcohol_consumption)
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
# Checking for missing values
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
Alcohol_consumption%>%group_by(Year)%>%count()
Alcohol_consumption%>%group_by(Period)%>%count()
Alcohol_consumption<-Alcohol_consumption%>%complete(Period=seq(min(Period),max(Period)),Location)%>%group_by(Location)%>%fill(SpatialDimValueCode,.direction ="downup")
# Extending years for missing countries
Alcohol_consumption<-Alcohol_consumption%>%filter(Period>=2000)%>%complete(Period=seq(min(Period),max(Period)),Location)%>%group_by(Location)%>%fill(SpatialDimValueCode,.direction ="downup")
Alcohol_consumption%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
# Transforming and cleaning - Alcohol - Habits
Alcohol_consumption<-read_excel("../Resources/Raw/Alcohol_consumption.xlsx",skip=2)
# Remove unwanted fields
Alcohol_consumption<-subset(Alcohol_consumption,Dim1=="All types")
Alcohol_consumption<-select(Alcohol_consumption,c(SpatialDimValueCode,Location,Period,FactValueNumeric))
# Converting year to proper format
Alcohol_consumption$Period<-as.numeric(as.character(Alcohol_consumption$Period))
# Checking for missing values
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
Alcohol_consumption%>%group_by(Period)%>%count()
# Extending years for countries missing the year
Alcohol_consumption<-Alcohol_consumption%>%complete(Period=seq(min(Period),max(Period)),Location)%>%group_by(Location)%>%fill(SpatialDimValueCode,.direction ="downup")
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
Alcohol_consumption<-Alcohol_consumption%>%group_by(Location)%>%mutate(FactValueNumeric = imputeTS::na_interpolation(FactValueNumeric,maxgap=5))
Alcohol_consumption<-Alcohol_consumption%>%filter(Period>=2000)%>%drop_na()
Alcohol_consumption%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
Alcohol_consumption<-read_excel("../Resources/Raw/Alcohol_consumption.xlsx",skip=2)
# Remove unwanted fields
Alcohol_consumption<-subset(Alcohol_consumption,Dim1=="All types")
Alcohol_consumption<-select(Alcohol_consumption,c(SpatialDimValueCode,Location,Period,FactValueNumeric))
# Converting year to proper format
Alcohol_consumption$Period<-as.numeric(as.character(Alcohol_consumption$Period))
# Checking for missing values
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
Alcohol_consumption%>%group_by(Period)%>%count()
# Extending years for countries missing the year
Alcohol_consumption<-Alcohol_consumption%>%complete(Period=seq(min(Period),max(Period)),Location)%>%group_by(Location)%>%fill(SpatialDimValueCode,.direction ="downup")
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
Alcohol_consumption<-Alcohol_consumption%>%group_by(Location)%>%mutate(FactValueNumeric = imputeTS::na_interpolation(FactValueNumeric,maxgap=5))
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
View(obesity)
# Transforming and cleaning - BCG - Immunization
BCG<-read_excel("../Resources/Raw/BCG.xlsx")
# Remove unwanted data
BCG<-subset(BCG,COVERAGE_CATEGORY=="WUENIC")
BCG<-select(BCG,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
# Checking missing data
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
View(BCG)
measles<-read_excel("../Resources/Raw/Measles vaccination coverage.xlsx")
# Remove unwanted data
measles<-subset(measles,COVERAGE_CATEGORY=="WUENIC")
measles<-select(measles,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
# Checking missing data
measles%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
View(measles)
BCG<-read_excel("../Resources/Raw/BCG.xlsx")
# Remove unwanted data
BCG<-subset(BCG,COVERAGE_CATEGORY=="WUENIC")
BCG<-select(BCG,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
# Checking missing data
measles%>%group_by(YEAR)%>%count()
# Extending dataset
BCG<-BCG%>%filter(YEAR<=2019)%>%complete(Period=seq(2020,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Extending dataset
BCG<-BCG%>%filter(YEAR<=2019)%>%complete(YEAR=seq(2020,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
View(BCG)
#Formatting
BCG$CODE<-upper(BCG$CODE)
#Formatting
BCG$CODE<-toupper(BCG$CODE)
# Transforming and cleaning - BCG - Immunization
BCG<-read_excel("../Resources/Raw/BCG.xlsx")
# Remove unwanted data
BCG<-subset(BCG,COVERAGE_CATEGORY=="WUENIC")
BCG<-select(BCG,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
#Formatting
BCG$CODE<-toupper(BCG$CODE)
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Extending dataset
BCG<-BCG%>%filter(YEAR<=2019)%>%complete(YEAR=seq(2020,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Transforming and cleaning - BCG - Immunization
BCG<-read_excel("../Resources/Raw/BCG.xlsx")
# Remove unwanted data
BCG<-subset(BCG,COVERAGE_CATEGORY=="WUENIC")%>%filter(BCG,YEAR<=2019)
# Remove unwanted data
BCG<-BCG%>%subset(COVERAGE_CATEGORY=="WUENIC")%>%filter(YEAR<=2019)
BCG<-select(BCG,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
#Formatting
BCG$CODE<-toupper(BCG$CODE)
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Extending dataset
BCG<-BCG%>%complete(YEAR=seq(2020,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
BCG<-read_excel("../Resources/Raw/BCG.xlsx")
# Remove unwanted data
BCG<-BCG%>%subset(COVERAGE_CATEGORY=="WUENIC")%>%filter(YEAR<=2019)
BCG<-select(BCG,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
#Formatting
BCG$CODE<-toupper(BCG$CODE)
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
BCG<-BCG%>%complete(YEAR=seq(2000,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Fill up any missing data
BCG<-BCG%>%group_by(NAME)%>%fill(COVERAGE,.direction="up")
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
BCG<-read_excel("../Resources/Raw/BCG.xlsx")
# Remove unwanted data
BCG<-BCG%>%subset(COVERAGE_CATEGORY=="WUENIC")%>%filter(YEAR<=2019)
BCG<-select(BCG,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
#Formatting
BCG$CODE<-toupper(BCG$CODE)
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Extending dataset
BCG<-BCG%>%complete(YEAR=seq(2000,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Fill up any missing data
BCG<-BCG%>%group_by(NAME)%>%fill(COVERAGE,.direction="down")
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
len(BCG$CODE)
length(BCG$CODE)
nchar(BCG$CODE)
BCG%>%subset(nchar(BCG$CODE)<3)
BCG%>%subset(nchar(BCG$CODE)==4)
BCG%>%subset(nchar(BCG$CODE)==5)
BCG%>%subset(nchar(BCG$CODE)==6)
BCG%>%subset(nchar(BCG$CODE)==7)
BCG%>%subset(nchar(BCG$CODE)==8)
BCG%>%subset(nchar(BCG$CODE)>7)
# Transforming and cleaning - BCG - Immunization
BCG<-read_excel("../Resources/Raw/BCG.xlsx")
# Remove unwanted data
BCG<-BCG%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(BCG$CODE)>2&nchar(BCG$CODE)<8)%>%filter(YEAR<=2019)
BCG<-select(BCG,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
#Formatting
BCG$CODE<-toupper(BCG$CODE)
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Extending dataset
BCG<-BCG%>%complete(YEAR=seq(2000,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Checking missing data
BCG%>%group_by(YEAR)%>%count()
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Fill up any missing data
BCG<-BCG%>%group_by(NAME)%>%fill(COVERAGE,.direction="down")
BCG%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
BCG<-drop_na(BCG)
# Streamline
names(BCG)<-c("Code","Country","Year","BCG_Code")
nchar(Alcohol_consumption$SpatialDimValueCode)
# Streamline
names(BCG)<-c("Year","Country","Code","BCG_Code")
measles<-read_excel("../Resources/Raw/Measles vaccination coverage.xlsx")
# Remove unwanted data
measles<-measles%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
measles<-select(measles,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
# Checking missing data
measles%>%group_by(YEAR)%>%count()
measles%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
View(measles)
#Formatting
measles$CODE<-toupper(measles$CODE)
# Checking missing data
measles%>%group_by(YEAR)%>%count()
measles%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Extending dataset
measles<-measles%>%complete(YEAR=seq(2000,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
measles%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
measles<-drop_na(measles)
measles%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Streamline
names(BCG)<-c("Year","Country","Code","MCV_Code")
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Merge the two dataframes
hepatitis<-merge(hepatitis_set1,hepatitis_set2,by=c("Country","Year"),all=TRUE)
hepatitis$HEPB_Code<- ifelse(is.na(hepatitis$HEPB),hepatitis$Hepatitis.B,                 ifelse(is.na(hepatitis$Hepatitis.B),hepatitis$HEPB,                       ifelse(abs((hepatitis$HEPB-hepatitis$Hepatitis.B)/(hepatitis$HEPB+hepatitis$Hepatitis.B))/2<0.2,(hepatitis$HEPB+hepatitis$Hepatitis.B)/2,hepatitis$HEPB)))
hepatitis<-select(hepatitis,-c(HEPB,Hepatitis.B))
# Checking missing data
heapatitis%>%group_by(Year)%>%count()
# Checking missing data
hepatitis%>%group_by(Year)%>%count()
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Merge the two dataframes
hepatitis<-merge(hepatitis_set1,hepatitis_set2,by=c("Country","Year"),all=TRUE)
hepatitis$HEPB_Code<- ifelse(is.na(hepatitis$HEPB),hepatitis$Hepatitis.B,                 ifelse(is.na(hepatitis$Hepatitis.B),hepatitis$HEPB,                       ifelse(abs((hepatitis$HEPB-hepatitis$Hepatitis.B)/(hepatitis$HEPB+hepatitis$Hepatitis.B))/2<0.2,(hepatitis$HEPB+hepatitis$Hepatitis.B)/2,hepatitis$HEPB)))
hepatitis<-select(hepatitis,-c(HEPB,Hepatitis.B))
# Checking missing data
hepatitis%>%group_by(Year)%>%count()
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
#Fill in missing years
hepatitis<-hepatitis%>%complete(Year=seq(2000,2019),Country)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Remove data with 80% missing data
hepatitis<-hepatitis%>%group_by(Country)%>%filter(!mean(is.na(HEPB_Code)) >= 0.2)
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Merge the two dataframes
hepatitis<-merge(hepatitis_set1,hepatitis_set2,by=c("Country","Year"),all=TRUE)
hepatitis$HEPB_Code<- ifelse(is.na(hepatitis$HEPB),hepatitis$Hepatitis.B,                 ifelse(is.na(hepatitis$Hepatitis.B),hepatitis$HEPB,                       ifelse(abs((hepatitis$HEPB-hepatitis$Hepatitis.B)/(hepatitis$HEPB+hepatitis$Hepatitis.B))/2<0.2,(hepatitis$HEPB+hepatitis$Hepatitis.B)/2,hepatitis$HEPB)))
hepatitis<-select(hepatitis,-c(HEPB,Hepatitis.B))
# Checking missing data
hepatitis%>%group_by(Year)%>%count()
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
#Fill in missing years
hepatitis<-hepatitis%>%complete(Year=seq(2000,2019),Country)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Remove data with 80% missing data
hepatitis<-hepatitis%>%group_by(Country)%>%filter(!mean(is.na(HEPB_Code)) >= 0.5)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(pct_miss>40)
View(hepatitis)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Merge the two dataframes
hepatitis<-merge(hepatitis_set1,hepatitis_set2,by=c("Country","Year"),all=TRUE)
hepatitis$HEPB_Code<- ifelse(is.na(hepatitis$HEPB),hepatitis$Hepatitis.B,                 ifelse(is.na(hepatitis$Hepatitis.B),hepatitis$HEPB,                       ifelse(abs((hepatitis$HEPB-hepatitis$Hepatitis.B)/(hepatitis$HEPB+hepatitis$Hepatitis.B))/2<0.2,(hepatitis$HEPB+hepatitis$Hepatitis.B)/2,hepatitis$HEPB)))
hepatitis<-select(hepatitis,-c(HEPB,Hepatitis.B))
# Checking missing data
hepatitis%>%group_by(Year)%>%count()
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
#Fill in missing years
hepatitis<-hepatitis%>%complete(Year=seq(2000,2019),Country)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Remove data with 80% missing data
hepatitis<-hepatitis%>%group_by(Country)%>%filter(!mean(is.na(HEPB_Code)) >= 0.2)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
hepatitis<-hepatitis%>%group_by(Country)%>%mutate(HEPB_Code = imputeTS::na_interpolation(HEPB_Code))
#Fill in Code values for missing rows
hepatitis<-hepatitis%>%group_by(Country)%>%fill(Code,.direction ="downup")
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Merge the two dataframes
hepatitis<-merge(hepatitis_set1,hepatitis_set2,by=c("Country","Year"),all=TRUE)
hepatitis$HEPB_Code<- ifelse(is.na(hepatitis$HEPB),hepatitis$Hepatitis.B,                 ifelse(is.na(hepatitis$Hepatitis.B),hepatitis$HEPB,                       ifelse(abs((hepatitis$HEPB-hepatitis$Hepatitis.B)/(hepatitis$HEPB+hepatitis$Hepatitis.B))/2<0.2,(hepatitis$HEPB+hepatitis$Hepatitis.B)/2,hepatitis$HEPB)))
hepatitis<-select(hepatitis,-c(HEPB,Hepatitis.B))
# Checking missing data
hepatitis%>%group_by(Year)%>%count()
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
#Fill in missing years
hepatitis<-hepatitis%>%complete(Year=seq(2000,2019),Country)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Remove data with 80% missing data
hepatitis<-hepatitis%>%group_by(Country)%>%filter(!mean(is.na(HEPB_Code)) >= 0.2)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Interpolate values to fill gaps
hepatitis<-hepatitis%>%group_by(Country)%>%mutate(HEPB_Code = imputeTS::na_interpolation(HEPB_Code))
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Merge the two dataframes
hepatitis<-merge(hepatitis_set1,hepatitis_set2,by=c("Country","Year"),all=TRUE)
hepatitis$HEPB_Code<- ifelse(is.na(hepatitis$HEPB),hepatitis$Hepatitis.B,                 ifelse(is.na(hepatitis$Hepatitis.B),hepatitis$HEPB,                       ifelse(abs((hepatitis$HEPB-hepatitis$Hepatitis.B)/(hepatitis$HEPB+hepatitis$Hepatitis.B))/2<0.2,(hepatitis$HEPB+hepatitis$Hepatitis.B)/2,hepatitis$HEPB)))
hepatitis<-select(hepatitis,-c(HEPB,Hepatitis.B))
# Checking missing data
hepatitis%>%group_by(Year)%>%count()
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
#Fill in missing years
hepatitis<-hepatitis%>%complete(Year=seq(2000,2019),Country)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Remove data with 80% missing data
hepatitis<-hepatitis%>%group_by(Country)%>%filter(!mean(is.na(HEPB_Code)) >= 0.2)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
# Checking missing data
hepatitis%>%group_by(Year)%>%count()
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Checking missing data
hepatitis_set1%>%group_by(Year)%>%count()
# Fill in missing years
hepatitis_set1<-hepatitis_set1%>%complete(Year=seq(2000,2019),Country)
# Transforming and cleaning - HepB - Immunization
hepatitis_set1<-read_excel("../Resources/Raw/Hepatitis B vaccination coverage.xlsx")
hepatitis_set2<-read.csv("../Resources/Raw/Life Expectancy Data.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted data
hepatitis_set1<-hepatitis_set1%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
hepatitis_set1<-select(hepatitis_set1,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
names(hepatitis_set1)<-c("Code","Country","Year","HEPB")
hepatitis_set2<-select(hepatitis_set2,c(Country,Year,Hepatitis.B))
# Checking missing data
hepatitis_set1%>%group_by(Year)%>%count()
# Fill in missing years
hepatitis_set1<-hepatitis_set1%>%complete(Year=seq(2000,2019),Country)
# Checking missing data
hepatitis_set1%>%group_by(Year)%>%count()
hepatitis<-merge(hepatitis_set1,hepatitis_set2,by=c("Country","Year"),all=TRUE)
hepatitis$HEPB_Code<- ifelse(is.na(hepatitis$HEPB),hepatitis$Hepatitis.B,                 ifelse(is.na(hepatitis$Hepatitis.B),hepatitis$HEPB,                       ifelse(abs((hepatitis$HEPB-hepatitis$Hepatitis.B)/(hepatitis$HEPB+hepatitis$Hepatitis.B))/2<0.2,(hepatitis$HEPB+hepatitis$Hepatitis.B)/2,hepatitis$HEPB)))
hepatitis<-select(hepatitis,-c(HEPB,Hepatitis.B))
# Checking missing data
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Remove data with 80% missing data
hepatitis<-hepatitis%>%group_by(Country)%>%filter(!mean(is.na(HEPB_Code)) >= 0.2)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Interpolate values to fill gaps
hepatitis<-hepatitis%>%group_by(Country)%>%mutate(HEPB_Code = imputeTS::na_interpolation(HEPB_Code))
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
#Fill in Code values for missing rows
hepatitis<-hepatitis%>%group_by(Country)%>%fill(Code,.direction ="downup")
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
hepatitis%>%group_by(Country)%>%miss_var_summary()%>%filter(n_miss>0)
# Dropped remaining missing values - Not listed in life expectancy
hepatitis<-drop_na(hepatitis)
# Transforming and cleaning - DTT and DTP - Immunization
diptheria<-read_excel("../Resources/Raw/Diptheria.xlsx")
# Remove unwanted data
diptheria<-diptheria%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
diptheria<-select(diptheria,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
#Formatting
diptheria$CODE<-toupper(diptheria$CODE)
# Checking missing data
diptheria%>%group_by(YEAR)%>%count()
diptheria%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
diptheria<-diptheria%>%complete(YEAR=seq(2000,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Checking missing data
diptheria%>%group_by(YEAR)%>%count()
diptheria%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
View(diptheria)
# Transforming and cleaning - DTT and DTP - Immunization
diptheria<-read_excel("../Resources/Raw/Diptheria.xlsx")
# Remove unwanted data
diptheria<-diptheria%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
diptheria<-select(diptheria,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
#Formatting
diptheria$CODE<-toupper(diptheria$CODE)
# Checking missing data
diptheria%>%group_by(YEAR)%>%count()
diptheria%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Extending dataset
diptheria<-diptheria%>%complete(YEAR=seq(2000,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Checking missing data
diptheria%>%group_by(YEAR)%>%count()
diptheria%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
diptheria<-drop_na(diptheria)
# Streamline
names(diptheria)<-c("Year","Country","Code","DTP_Code")
he<-read.csv("../Resources/Raw/Health Expenditure.csv",check.names=TRUE,header = TRUE, sep = ",", stringsAsFactors = FALSE)
# Remove unwanted fields
he<-select(he,-c(Indicators,X))
he<-tail(he,-1) # Removing first after header
# Transform
he<-gather(he,key="Year",value="HE_Code",X2000:X2019)
# Converting to proper format
he$Year<-gsub("X","",he$Year)%>%as.numeric(as.character(he$Year))
he$HE_Code<-as.numeric(he$HE_Code)
# Checking for missing data
he%>%group_by(Countries)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
he<-he%>%group_by(Countries)%>%filter(!mean(is.na(HE_Code)) >= 0.2)
he%>%group_by(Countries)%>%miss_var_summary()%>%filter(n_miss>0)
View(he)
nchar(le$Code)
nchar(diabetes$Code)
nchar(cancer$Code)
# Transforming and cleaning - Alcohol - Habits
Alcohol_consumption<-read_excel("../Resources/Raw/Alcohol_consumption.xlsx",skip=2)
# Remove unwanted fields
Alcohol_consumption<-subset(Alcohol_consumption,Dim1=="All types")
Alcohol_consumption<-select(Alcohol_consumption,c(SpatialDimValueCode,Location,Period,FactValueNumeric))
# Converting year to proper format
Alcohol_consumption$Period<-as.numeric(as.character(Alcohol_consumption$Period))
# Checking for missing values
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
Alcohol_consumption%>%group_by(Period)%>%count()
# Extending years for countries missing the year
Alcohol_consumption<-Alcohol_consumption%>%complete(Period=seq(min(Period),max(Period)),Location)%>%group_by(Location)%>%fill(SpatialDimValueCode,.direction ="downup")
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
# Handling missing data
Alcohol_consumption<-Alcohol_consumption%>%group_by(Location)%>%mutate(FactValueNumeric = imputeTS::na_interpolation(FactValueNumeric,maxgap=5))
Alcohol_consumption%>%filter(Period>=2000)%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
Alcohol_consumption<-Alcohol_consumption%>%filter(Period>=2000)%>%drop_na()
Alcohol_consumption%>%group_by(Location)%>%miss_var_summary()%>%filter(n_miss>0)
#Streamline
names(Alcohol_consumption)<-c("Year","Country","Code","ALC_Code")
View(Alcohol_consumption1)
View(le)
measles<-read_excel("../Resources/Raw/Measles vaccination coverage.xlsx")
# Remove unwanted data
measles<-measles%>%subset(COVERAGE_CATEGORY=="WUENIC"&nchar(CODE)>2&nchar(CODE)<8)%>%filter(YEAR<=2019)
measles<-select(measles,-c(GROUP,ANTIGEN,ANTIGEN_DESCRIPTION,COVERAGE_CATEGORY,COVERAGE_CATEGORY_DESCRIPTION,TARGET_NUMBER,DOSES))
measles$CODE<-toupper(measles$CODE)
measles%>%group_by(YEAR)%>%count()
measles%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
measles<-measles%>%complete(YEAR=seq(2000,2019),NAME)%>%group_by(NAME)%>%fill(CODE,.direction ="downup")
# Checking missing data
measles%>%group_by(YEAR)%>%count()
measles%>%group_by(NAME)%>%miss_var_summary()%>%filter(n_miss>0)
View(measles)
x<-c(1,2,3,NA,NA,NA,NA)
mean(is.na(x)
x<-c(1,2,3,NA,NA,NA,NA)
mean(is.na(x))
x<-c(1,2,NA,NA,NA,NA,NA,NA)
mean(is.na(x))
!mean(is.na(x))>=0.75
x<-c(1,2,3,4,5,6,7,NA)
!mean(is.na(x))>=0.75
x<-c(1,2,3,4,5,6,7,NA)
mean(is.na(x))
x<-c(1,2,3,4,5,NA,NA,NA)
mean(is.na(x))
!mean(is.na(x))>=0.75
!mean(is.na(x))>=0.2
x<-c(1,2,3,4,5,6,NA,NA)
mean(is.na(x))
x<-c(1,2,3,4,5,6,NA,7,NA)
mean(is.na(x))
!mean(is.na(x))>=0.2
x<-c(1,2,3,4,5,6,6,7,NA)
mean(is.na(x))
!mean(is.na(x))>=0.2
